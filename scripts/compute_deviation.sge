#!/bin/bash

# Copyright 2015 Jeff Vierstra

set -e -o pipefail

#prefix=NCI_H2081-DS25642A
#output_dir=/home/jvierstra/proj/ftd/results/${prefix}
#bam_file=/net/monarch/vol2/tag/stamlab/GSK/production/alignments/NCI_H2081-DS25642A.hg19.bam
#interval_file=/net/monarch/vol2/tag/stamlab/GSK/production/hotspot/NCI_H2081-DS25642A.hg19/NCI_H2081-DS25642A.hg19-final/NCI_H2081-DS25642A.hg19.fdr0.01.hot.bed

#prefix=K562-DS9767
#output_dir=/home/jvierstra/proj/ftd/results/${prefix}
#bam_file=/net/monarch/vol2/tag/stamlab/data-release/encode/DGF/100607/alignments/K562-DS9767.hg19.bam
#interval_file=/net/monarch/vol2/tag/stamlab/data-release/encode/DGF/100607/hotspots/K562-DS9767.hotspot.twopass.merge150.wgt10.zgt2.hg19.bed.gz

#prefix=hTR-DS14702
#output_dir=/home/jvierstra/proj/ftd/results/${prefix}
#bam_file=/net/monarch/vol2/tag/stamlab/data-release/encode/DGF/120229/alignments/hTR-DS14702.hg19.bam
#interval_file=/net/monarch/vol2/tag/stamlab/data-release/encode/DGF/120229/hotspots/hTR-DS14702.hotspot.twopass.merge150.wgt10.zgt2.hg19.bed.gz

bias_model_file=/home/jvierstra/proj/dnase-perspective/cleavage_model/vierstra_et_al.txt

prefix=$1
fasta_file=$2
bam_file=$3
interval_file=$4

output_dir=/home/jvierstra/proj/ftd/results/${prefix}

chrom_sizes_file="${fasta_file%.fa}.chrom.sizes"

echo $prefix
echo $fasta_file
echo $chrom_sizes_file
echo $bam_file
echo $interval_file
echo $output_dir

chunksize=1000

# FPR thresholds to call footprints
fps_thresh=(0.2 0.1 0.05 0.01)

mkdir -p ${output_dir}/logs

scripts_dir=/home/jvierstra/proj/code/footprint-tools/scripts

# load modules
source /net/lebowski/vol1/Modules/3.2.9/init/bash
module load coreutils/8.9
module load bedops/2.4.3
module load python/2.7.3

# memory per sge slot in GB
mem_per_slot=4


cat <<__SCRIPT__ > ${output_dir}/sge.learn_dispersion_model
#!/bin/bash
#$ -e ${output_dir}/logs/\$JOB_NAME.err
#$ -o ${output_dir}/logs/\$JOB_NAME.out

set -e -o pipefail

zcat -f ${interval_file} > \${TMPDIR}/intervals.bed

cat \${TMPDIR}/intervals.bed | random-lines --seed=1 --num=10000 --max=\`wc -l < \${TMPDIR}/intervals.bed\` > \${TMPDIR}/intervals.sampled.bed

python ${scripts_dir}/learn_dispersion_model.py \
	--bm ${bias_model_file} --half_win_width 5 \
	--processors \${NSLOTS} \
	${bam_file} ${fasta_file} \${TMPDIR}/intervals.sampled.bed \
> ${output_dir}/dm.json
__SCRIPT__

qsub -V -pe threads 4-8 \
	-N ${prefix}.learn_dm \
	-S /bin/bash ${output_dir}/sge.learn_dispersion_model


cat <<__SCRIPT__ > ${output_dir}/sge.compute_deviation_chunk
#!/bin/bash
#$ -e ${output_dir}/logs/\$JOB_NAME.\$TASK_ID.err
#$ -o ${output_dir}/logs/\$JOB_NAME.\$TASK_ID.out

set -e -o pipefail

INPUT_FILES=(\`cat ${output_dir}/sge.compute_deviation_chunk.params | head -n \${SGE_TASK_ID} | tail -n 1\`)

python ${scripts_dir}/compute_deviation.py \
	--bm ${bias_model_file} --half_win_width 5 \
	--smooth_half_win_width 50 --smooth_clip 0.01 \
	--dm ${output_dir}/dm.json --fdr_shuffle_n 25 \
	--processors \${NSLOTS} \
	${bam_file} ${fasta_file} \${INPUT_FILES[0]} \
| sort --buffer-size=${mem_per_slot}G -k1,1 -k2,2n > \${INPUT_FILES[0]}.out
__SCRIPT__

zcat -f ${interval_file} | split -l ${chunksize} -a 4 -d - ${output_dir}/interval.
ls ${output_dir}/interval.* > ${output_dir}/sge.compute_deviation_chunk.params

qsub -V -pe threads 1-8 \
	-N ${prefix}.compute_deviation -t 1-$(wc -l < ${output_dir}/sge.compute_deviation_chunk.params) \
	-hold_jid ${prefix}.learn_dm \
	-S /bin/bash ${output_dir}/sge.compute_deviation_chunk


cat <<__SCRIPT__ > ${output_dir}/sge.compute_deviation_merge_sort
#!/bin/bash
#$ -e ${output_dir}/logs/\$JOB_NAME.err
#$ -o ${output_dir}/logs/\$JOB_NAME.out

set -e -o pipefail

INPUT_FILES=(\`cat ${output_dir}/sge.compute_deviation_chunk.params\`)
OUTPUT_FILES=("\${INPUT_FILES[@]/%/.out}")

sort -k1,1 -k2,2n -S ${mem_per_slot}G -m \${OUTPUT_FILES[@]} > ${output_dir}/interval.all.bedgraph

rm -f \${INPUT_FILES[@]} \${OUTPUT_FILES[@]}
__SCRIPT__

qsub -V \
	-N ${prefix}.compute_deviation_merge_sort \
	-hold_jid ${prefix}.compute_deviation \
	-S /bin/bash ${output_dir}/sge.compute_deviation_merge_sort


cat <<__SCRIPT__ > ${output_dir}/sge.compute_deviation_working_tracks
#!/bin/bash
#$ -e ${output_dir}/logs/\$JOB_NAME.err
#$ -o ${output_dir}/logs/\$JOB_NAME.out

set -e -o pipefail

BUFFER_SIZE="\$(echo "${mem_per_slot}*\${NSLOTS}" | bc)G"

sort-bed --tmpdir \${TMPDIR} --max-mem \${BUFFER_SIZE} ${output_dir}/interval.all.bedgraph | starch - > ${output_dir}/interval.all.bedgraph.starch

bgzip -c ${output_dir}/interval.all.bedgraph > ${output_dir}/interval.all.bedgraph.gz
tabix -0 -p bed ${output_dir}/interval.all.bedgraph.gz
__SCRIPT__


cat <<__SCRIPT__ > ${output_dir}/sge.compute_deviation_footprints
#!/bin/bash

set -e -o pipefail

thresholds=(${fps_thresh[@]})
thresh=\${thresholds[\${SGE_TASK_ID}-1]}

cat ${output_dir}/interval.all.bedgraph \
	| awk -v OFS="\t" -v thresh="\${thresh}" '\$8 <= thresh { print \$1, \$2-3, \$3+3; }' \
	| sort-bed --tmpdir \${TMPDIR} --max-mem ${mem_per_slot}G - \
	| bedops -m - \
	| awk -v OFS="\t" -v thresh="\${thresh}" '{ \$4="."; \$5=thresh; print; }' \
> ${output_dir}/interval.all.fps.\${thresh}.bed
__SCRIPT__


cat <<__SCRIPT__ > ${output_dir}/sge.compute_deviation_browser_tracks
#!/bin/bash
#$ -e ${output_dir}/logs/\$JOB_NAME.err
#$ -o ${output_dir}/logs/\$JOB_NAME.out

set -e -o pipefail

cut -f1-3,4 ${output_dir}/interval.all.bedgraph | awk '\$4 > 0 { print; }' > \${TMPDIR}/interval.all.exp.bedgraph
bedGraphToBigWig \${TMPDIR}/interval.all.exp.bedgraph ${chrom_sizes_file} ${output_dir}/interval.all.exp.bw

cut -f1-3,5 ${output_dir}/interval.all.bedgraph | awk '\$4 > 0 { print; }' > \${TMPDIR}/interval.all.obs.bedgraph
bedGraphToBigWig \${TMPDIR}/interval.all.obs.bedgraph ${chrom_sizes_file} ${output_dir}/interval.all.obs.bw

cut -f1-3,6 ${output_dir}/interval.all.bedgraph > \${TMPDIR}/interval.all.lnpval.bedgraph
bedGraphToBigWig \${TMPDIR}/interval.all.lnpval.bedgraph ${chrom_sizes_file} ${output_dir}/interval.all.lnpval.bw

cut -f1-3,7 ${output_dir}/interval.all.bedgraph > \${TMPDIR}/interval.all.winlnpval.bedgraph
bedGraphToBigWig \${TMPDIR}/interval.all.winlnpval.bedgraph ${chrom_sizes_file} ${output_dir}/interval.all.winlnpval.bw

cut -f1-3,8 ${output_dir}/interval.all.bedgraph > \${TMPDIR}/interval.all.fpr.bedgraph
bedGraphToBigWig \${TMPDIR}/interval.all.fpr.bedgraph ${chrom_sizes_file} ${output_dir}/interval.all.fpr.bw
__SCRIPT__

cat <<__SCRIPT__ > ${output_dir}/sge.compute_deviation_cleanup
#!/bin/bash

set -e -o pipefail

rm -f ${output_dir}/interval.all.bedgraph
__SCRIPT__


qsub -V -pe threads 2 \
	-N ${prefix}.compute_deviation_working_tracks \
	-hold_jid ${prefix}.compute_deviation_merge_sort \
	-S /bin/bash ${output_dir}/sge.compute_deviation_working_tracks

qsub -V \
	-N ${prefix}.compute_deviation_footprints -t 1-${#fps_thresh[@]} \
	-hold_jid ${prefix}.compute_deviation_merge_sort \
	-S /bin/bash ${output_dir}/sge.compute_deviation_footprints

qsub -V \
	-N ${prefix}.compute_deviation_browser_tracks \
	-hold_jid ${prefix}.compute_deviation_merge_sort \
	-S /bin/bash ${output_dir}/sge.compute_deviation_browser_tracks

qsub -V \
	-N ${prefix}.compute_deviation_cleanup \
	-hold_jid ${prefix}.compute_deviation_working_tracks,${prefix}.compute_deviation_footprints,${output_dir}/sge.compute_deviation_browser_tracks \
	-S /bin/bash ${output_dir}/sge.compute_deviation_cleanup

